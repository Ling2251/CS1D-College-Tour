.TH "dbManager" 3 "Sat Mar 18 2023" "CS1D-College-Tour" \" -*- nroff -*-
.ad l
.nh
.SH NAME
dbManager \- Most functionality of the \fBdbManager\fP class is to load the campus names and the the distance between the selected campus and loading souvenirs name and price and lastly the ability to create a data table for the shopping cart\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <dbmanager\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBdbManager\fP ()"
.br
.RI "\fBdbManager\fP constructer function that create a object to associate with the database connected the database with the qt creator "
.ti -1c
.RI "\fB~dbManager\fP ()"
.br
.ti -1c
.RI "QSqlQueryModel * \fBloadCampusNamesOnly\fP ()"
.br
.ti -1c
.RI "QSqlQueryModel * \fBloadOtherCampusAndDist\fP (QString campus)"
.br
.ti -1c
.RI "QSqlQueryModel * \fBloadRemainingCampusNamesOnly\fP (QVector< QString > campuses)"
.br
.ti -1c
.RI "bool \fBcheckCampusName\fP (QString campus)"
.br
.ti -1c
.RI "double \fBGetDistBtwn\fP (QString start, QString end)"
.br
.ti -1c
.RI "QSqlQueryModel * \fBloadCampusSouvenirs\fP (QString campus)"
.br
.ti -1c
.RI "QSqlQueryModel * \fBloadSouvCart\fP (QString sQry)"
.br
.ti -1c
.RI "void \fBcreateCart\fP ()"
.br
.ti -1c
.RI "void \fBdeleteCart\fP ()"
.br
.ti -1c
.RI "void \fBupdateCartQuantity\fP (QString campus, QString souv, int quantity)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "QSqlDatabase \fBm_database\fP"
.br
.RI "m_database A public database variable for access all the dbmanager functions "
.in -1c
.SH "Detailed Description"
.PP 
Most functionality of the \fBdbManager\fP class is to load the campus names and the the distance between the selected campus and loading souvenirs name and price and lastly the ability to create a data table for the shopping cart\&. 
.PP
Definition at line \fB16\fP of file \fBdbmanager\&.h\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "dbManager::dbManager ()"

.PP
\fBdbManager\fP constructer function that create a object to associate with the database connected the database with the qt creator constructer function that create a object to associate with the database connected the database with the qt creator 
.PP
\fBReturns\fP
.RS 4
nothing, it just link this program to the SQL database 
.RE
.PP

.PP
Definition at line \fB9\fP of file \fBdbmanager\&.cpp\fP\&.
.SS "dbManager::~dbManager ()"
A destructor function 
.PP
Definition at line \fB24\fP of file \fBdbmanager\&.cpp\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "dbManager::checkCampusName (QString campus)"
Using the SQL query funtion, this function determines if the specified college is present in the database\&. If a database error occurs, an error warning is printed to the console\&. 
.PP
\fBParameters\fP
.RS 4
\fIstring\fP campus, the selected campus name 
.RE
.PP
\fBReturns\fP
.RS 4
true or falst, to see if the name is in the list\&. 
.RE
.PP

.PP
Definition at line \fB85\fP of file \fBdbmanager\&.cpp\fP\&.
.SS "dbManager::createCart ()"
Creates a temporary table called cart in the SQL Database, and alters the table by adding a column called quantity for the quanity purchased\&. 
.PP
Definition at line \fB200\fP of file \fBdbmanager\&.cpp\fP\&.
.SS "dbManager::deleteCart ()"
This deletes the cart table in the SQL Database when the user has completed their shopping trip\&. 
.PP
Definition at line \fB221\fP of file \fBdbmanager\&.cpp\fP\&.
.SS "dbManager::GetDistBtwn (QString start, QString end)"
Using the SQL query funtion, the distance between the 2 specified campuses\&. If a database error occurs, an error warning is printed to the console\&. 
.PP
\fBParameters\fP
.RS 4
\fIstring\fP start, string end, the distenct between the start campuses and end campuses 
.RE
.PP
\fBReturns\fP
.RS 4
double distenct, the distenct between 2 campuses 
.RE
.PP

.PP
Definition at line \fB104\fP of file \fBdbmanager\&.cpp\fP\&.
.SS "dbManager::loadCampusNamesOnly ()"
Using the SQl query funtion, only the name of the college campuses are read in from the database into a QSqlQueryModel\&. If a database error occurs, an error warning is printed to the console\&. 
.PP
\fBReturns\fP
.RS 4
pointer model, the name of the campus in the from of sql database 
.RE
.PP

.PP
Definition at line \fB36\fP of file \fBdbmanager\&.cpp\fP\&.
.SS "dbManager::loadCampusSouvenirs (QString campus)"
Using the SQL query funtion, the souvenirs for a specified campus are read in from the database into a QSqlQueryModel\&. If a database error occurs, an error warning is printed to the console\&. 
.PP
\fBParameters\fP
.RS 4
\fIstring\fP campus, the selected campus name 
.RE
.PP
\fBReturns\fP
.RS 4
pointer model, the souvenirs of the selected campus 
.RE
.PP

.PP
Definition at line \fB126\fP of file \fBdbmanager\&.cpp\fP\&.
.SS "dbManager::loadOtherCampusAndDist (QString campus)"
Using the SQL query funtion and using the name of a single campus, the names of the other campuses and their distance between them and the starding campus are read in from the database into a QSqlQueryModel\&. If a database error occurs, an error warning is printed to the console\&. 
.PP
\fBParameters\fP
.RS 4
\fIstring\fP campus, the selected campus name 
.RE
.PP
\fBReturns\fP
.RS 4
pointer model, the list of other campus name with the distenct to the selected campus in the from of sql database 
.RE
.PP

.PP
Definition at line \fB62\fP of file \fBdbmanager\&.cpp\fP\&.
.SS "dbManager::loadRemainingCampusNamesOnly (QVector< QString > campuses)"
Using the SQL query funtion, the name of the avaliable college campuses are read in from the database into a QSqlQueryModel\&. The function excludes reading in the campuses from the passed in vector\&. If a database error occurs, an error warning is printed to the console\&. 
.PP
\fBParameters\fP
.RS 4
\fIvetctor\fP campus, the selected campus name 
.RE
.PP
\fBReturns\fP
.RS 4
pointer model, the list of other campus name to the selected campus in the from of sql database 
.RE
.PP

.PP
Definition at line \fB150\fP of file \fBdbmanager\&.cpp\fP\&.
.SS "dbManager::loadSouvCart (QString sQry)"
Using the SQL query funtion, the selected sovenirs are read in from the database into a QSqlQueryModel\&. The query is an accumulator query that contains all the souvenirs the user has selected to add to an update quey using SQL code 'UNION'\&. If a database error occurs, an error warning is printed to the console\&. 
.PP
\fBParameters\fP
.RS 4
\fIstring\fP sqry, accumulator query that contains all the souvenirs the user has selected 
.RE
.PP
\fBReturns\fP
.RS 4
pointer model, the souvenirs the user has selected add 
.RE
.PP

.PP
Definition at line \fB181\fP of file \fBdbmanager\&.cpp\fP\&.
.SS "dbManager::updateCartQuantity (QString campus, QString souv, int quantity)"
This function updates the changes of quantity to the cart table in the SQL Database\&. 
.PP
\fBParameters\fP
.RS 4
\fIstring\fP campus, string souv, int quantity, The name of the campus with the souvenirs name and the quantity the student has added 
.RE
.PP
\fBReturns\fP
.RS 4
nothing, it just updated the quantity of the souvenirs item the student has add 
.RE
.PP

.PP
Definition at line \fB237\fP of file \fBdbmanager\&.cpp\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "QSqlDatabase dbManager::m_database"

.PP
m_database A public database variable for access all the dbmanager functions 
.PP
Definition at line \fB110\fP of file \fBdbmanager\&.h\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for CS1D-College-Tour from the source code\&.
